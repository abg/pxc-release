<%=
cluster_ips = link('mysql').instances.map(&:address)

databases = []
p('seeded_databases').each do |seed|
  databases << {
  "DBName" => seed["name"],
  "User" => seed["username"],
  "Password" => seed["password"]
  }
end

users = []
p('seeded_users').each do |username, user_config|
  users << {
  "User" => username,
  "Password" => user_config["password"],
  "Host" => user_config["host"],
  "Role" => user_config["role"]
  }
end

config = {
    "LogFileLocation" => '/var/vcap/sys/log/pxc-mysql/galera-init.log',
    "PidFile" => '/var/vcap/sys/run/pxc-ctl/pxc-ctl.pid',
    "ChildPidFile" => '/var/vcap/sys/run/pxc-mysql/mysql.pid',
    "Db" => {
      "SkipBinlog" => !p('engine_config.galera.enabled'),
      "User" => p('admin_username'),
      "Password" => p('admin_password'),
      "PreseededDatabases" => databases,
      "SeededUsers" => users,
      "Socket" => p('mysql_socket'),
    },
    "Manager" => {
      "GaleraInitStatusServerAddress" => '127.0.0.1:8114',
      "StateFileLocation" => '/var/vcap/store/pxc-mysql/state.txt',
      "ClusterIps" => cluster_ips,
      "BootstrapNode" => spec.bootstrap,
      "ClusterProbeTimeout" => p('cluster_probe_timeout'),
    }
}

if_link('galera-agent') do |galera_agent_link|
    config["BackendTLS"] = {
        "Enabled" => galera_agent_link.p('endpoint_tls.enabled'),
        "CA" => galera_agent_link.p('endpoint_tls.ca'),
        "ServerName" => galera_agent_link.p('endpoint_tls.server_name'),
    }
end
YAML.dump(config)
%>
